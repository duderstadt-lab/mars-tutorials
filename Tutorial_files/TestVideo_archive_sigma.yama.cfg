{
  "Window" : {
    "x" : 59,
    "y" : 59,
    "width" : 1358,
    "height" : 799
  },
  "DashboardTab" : {
    "Widgets" : [ {
      "Name" : "CategoryChartWidget",
      "Settings" : {
        "Width" : 325.0,
        "Height" : 270.0,
        "Language" : "Python",
        "Script" : "#@ MoleculeArchive archive\n#@OUTPUT String xlabel\n#@OUTPUT String ylabel\n#@OUTPUT String color\n#@OUTPUT String title\n#@OUTPUT String[] xvalues\n#@OUTPUT Double[] yvalues\n#@OUTPUT Double ymin\n#@OUTPUT Double ymax\n\ncolor = \"#add8e6\"\ntitle = \"Dist_y vs. Category\"\nxlabel = \"Categories\"\nylabel = \"Mean dist_y value\"\nymin = 0.0\nymax = 30.0\n\nxvalues = ['Active','NotActive'] #Name the categories to be displayed\nlist1 = []\nlist2 = []\n\nfor UID in archive.getMoleculeUIDs():\n    if archive.get(UID).hasTag('Active'): #Check if an entry is tagged 'Active'\n        list1.append(archive.get(UID).getParameter('dist_y'))\n    else:\n        list2.append(archive.get(UID).getParameter('dist_y'))\nyvalues=[sum(list1)/len(list1),sum(list2)/len(list2)]"
      }
    }, {
      "Name" : "BubbleChartWidget",
      "Settings" : {
        "Width" : 325.0,
        "Height" : 270.0,
        "Language" : "Groovy",
        "Script" : "#@ MoleculeArchive archive\n#@OUTPUT String xlabel\n#@OUTPUT String ylabel\n#@OUTPUT String title\n#@OUTPUT Double xmin\n#@OUTPUT Double xmax\n#@OUTPUT Double ymin\n#@OUTPUT Double ymax\n\n//Set global outputs\nxlabel = \"Category (1=tagged, 2=untagged)\"\nylabel = \"Dist_y\"\ntitle = \"Dist_y with respect to category\"\nxmin = 0.0\nxmax = 3.0\nymin = -10\nymax = 35\n\n//Series 1 and 2 Outputs\n#@OUTPUT Double[] series1_xvalues\n#@OUTPUT Double[] series1_yvalues\n#@OUTPUT Double[] series1_size\n#@OUTPUT String[] series1_label\n#@OUTPUT String[] series1_color\n#@OUTPUT String series1_markerColor\n#@OUTPUT Double[] series2_xvalues\n#@OUTPUT Double[] series2_yvalues\n#@OUTPUT Double[] series2_size\n#@OUTPUT String[] series2_label\n#@OUTPUT String[] series2_color\n#@OUTPUT String series2_markerColor\n\nseries1_yvalues = []\nseries2_yvalues = []\nlistUID = []\n\n//Assign the yvalues dependent on the tag\n\narchive.getMoleculeUIDs().forEach{UID -> listUID.add(UID)}\n\nfor (int i = 0; i<listUID.size();i++){\n  if (archive.get(listUID[i]).hasTag(\"Active\")){\n    series1_yvalues.add(archive.get(listUID[i]).getParameter(\"dist_y\"))\n  } else {\n    series2_yvalues.add(archive.get(listUID[i]).getParameter(\"dist_y\"))\n  }\n}\n\n//Declare all other plot output features\nseries1_markerColor = \"lightgreen\"\nseries1_xvalues = []\nseries1_size = []\nseries1_color = []\nseries1_label = []\nseries2_markerColor = \"pink\"\nseries2_xvalues = []\nseries2_size = []\nseries2_color = []\nseries2_label = []\n\nfor (int i = 0; i<(series1_yvalues.size());i++) {\n  series1_xvalues.add(1)\n  series1_size.add(4.0)\n  series1_color.add(\"blue\")\n  series1_label.add(\"none\")\n}\n\nfor (int i = 0; i<(series2_yvalues.size());i++) {\n  series2_xvalues.add(2)\n  series2_size.add(4.0)\n  series2_color.add(\"red\")\n  series2_label.add(\"none\")\n}"
      }
    }, {
      "Name" : "XYChartWidget",
      "Settings" : {
        "Width" : 325.0,
        "Height" : 270.0,
        "Language" : "Groovy",
        "Script" : "#@ MoleculeArchive archive\n#@OUTPUT String xlabel\n#@OUTPUT String ylabel\n#@OUTPUT String title\n#@OUTPUT Double xmin\n#@OUTPUT Double xmax\n#@OUTPUT Double ymin\n#@OUTPUT Double ymax\n\n#@OUTPUT Double[] series1_xvalues\n#@OUTPUT Double[] series1_yvalues\n#@OUTPUT Double[] series1_error\n#@OUTPUT Double[] series2_xvalues\n#@OUTPUT Double[] series2_yvalues\n#@OUTPUT Double[] series2_error\n#@OUTPUT String series1_fillColor\n#@OUTPUT String series1_strokeColor\n#@OUTPUT Integer series1_strokeWidth\n#@OUTPUT String series2_fillColor\n#@OUTPUT String series2_strokeColor\n#@OUTPUT Integer series2_strokeWidth\n\n//Set global outputs\nxlabel = \"Category (1=Active, 2=Not Active)\"\nylabel = \"Dist_y\"\ntitle = \"Dist_y with respect to Category\"\nxmin = 0.0\nxmax = 3.0\nymin = -10\nymax = 35\n\n//Set plotting settings\nseries1_fillColor = \"blue\"\nseries1_strokeColor = \"blue\"\nseries1_strokeWidth = 2.0\nseries2_fillColor = \"red\"\nseries2_strokeColor = \"red\"\nseries2_strokeWidth = 2.0\n\n//Define the values to be plotted \nseries1_xvalues = [1.0]\nseries2_xvalues = [2.0]\nseries1_error = [archive.getMetadata(0).getParameter(\"disty_sigma_active\")]\nseries2_error = [archive.getMetadata(0).getParameter(\"disty_sigma_unactive\")]\n\nlistUID = []\nseries1_list = []\nseries2_list = []\n\narchive.getMoleculeUIDs().forEach{UID -> listUID.add(UID)}\n\nfor (int i = 0; i<listUID.size();i++){\n  if (archive.get(listUID[i]).hasTag(\"Active\")){\n    series1_list.add(archive.get(listUID[i]).getParameter(\"dist_y\"))\n  } else {\n    series2_list.add(archive.get(listUID[i]).getParameter(\"dist_y\"))\n  }\n}\n\nseries1_yvalues = [series1_list.sum()/series1_list.size()]\nseries2_yvalues = [series2_list.sum()/series2_list.size()]"
      }
    } ]
  },
  "MetadataTab" : {
    "SearchField" : "",
    "MarsMetadataSelectionUID" : "5S7aq3idPH",
    "CenterPane" : {
      "MarsMetadataDashboard" : {
        "Widgets" : [ ]
      }
    }
  },
  "MoleculesTab" : {
    "SearchField" : "",
    "MoleculeSelectionUID" : "uvRFTCDfxakwR7omfpBMWX",
    "CenterPane" : {
      "PlotPane" : {
        "NumberSubPlots" : 1,
        "SubPlots" : [ {
          "Title" : "Trace",
          "xAxisName" : "Slice",
          "yAxisName" : "Y position",
          "Indicators" : "Molecules",
          "PlotSeries" : [ {
            "Track" : true,
            "Type" : "Line",
            "xColumn" : "slice",
            "yColumn" : "y",
            "Style" : " ",
            "Color" : "0x000000ff",
            "Stroke" : "1.0",
            "ShowSegments" : false,
            "SegmentsColor" : "0xff0000ff",
            "SegmentsStroke" : "1.0"
          } ]
        } ]
      },
      "MoleculeDashboard" : {
        "Widgets" : [ ]
      }
    }
  },
  "CommentsTab" : { },
  "SettingsTab" : { }
}